maxLKR <- which(LKRs==max(LKRs))
maxK <- kValues[maxLKR]
thisOut <- outList[[maxLKR]]
# get mean in each partition for transforming back to mean-scale
Ytilde <- cut(Y, breaks=quantile(Y, p=seq(0,1,length=maxK+1)), labels=FALSE,
include.lowest=TRUE)
hK <- apply(matrix(1:maxK), 1, function(x){
mean(Y[Ytilde==x])
})
# calculate mean by calculating density of each partition
pred <- apply(matrix(1:length(newX[,1])), 1, FUN=function(x){
suppressWarnings(
haz <- predict(thisOut$fm,
newdata=data.frame(newX[x,],k=1:maxK),
type="response")
)
dens <- c(1,cumprod(1-haz[1:(maxK-1)])) * haz
sum(hK*dens)
})
fit <- list(object=thisOut$fm, maxK=maxK, hK=hK)
class(fit) <- "SL.gilleskie"
out <- list(pred=pred, fit=fit)
out
}
# predict function for SL.gilleskie
predict.SL.gilleskie <- function(object, newdata,...){
pred <- apply(matrix(1:length(newdata[,1])), 1, FUN=function(x){
suppressWarnings(
haz <- predict(object$object,newdata=data.frame(newdata[rep(x,object$maxK),],k=1:object$maxK),
type="response")
)
dens <- c(1,cumprod(1-haz[1:(object$maxK-1)])) * haz
sum(object$hK*dens)
})
pred
}
twostage.fit <- twostageSL(Y = meps$exp_tot, X = meps[,c('female','age')],
library.2stage = list(stage1=c("SL.glm","SL.rf.caret1","SL.glmnet"),
stage2=c("SL.logOLS.smear","SL.gammaLogGLM",
"SL.gammaIdentityGLM",
"SL.manningGLM",
"SL.gengamma","SL.coxph",
"SL.wangZhou","SL.gilleskie",
"SL.rf.caret1","SL.glmnet")),
library.1stage = c("SL.mean","SL.lm","SL.zip","SL.zinb","SL.tobit",
"SL.tweedie","SL.rf.caret1","SL.glmnet"),
twostage = TRUE,
family.1 = binomial,
family.2 = gaussian,
family.single = gaussian,
cvControl = list(V = 2))
knitr::opts_chunk$set(echo = TRUE)
mod <- glm(
ab_resistance ~ shield_glycans + region + env_length,
data = data
)
table_data <-  as.data.frame(summary(mod)$coefficients)
table_data$`Pr(>|t|)` <- ifelse(table_data$`Pr(>|t|)` < 0.01, "<0.01", format(round(table_data$`Pr(>|t|)`, 2)))
# Add your code here to format table using knitr::kable
rownames(table_data) <- c("$\\beta_0$","Shield glycans",
"region: Europe Americas","region: North Africa",
"region: South Africa","Length of Env protein")
knitr::kable(table_data,digits = 2,align = "c")
pacman::p_load(rio)
dt<- import("https://www.kaggle.com/datasets/thedevastator/exploring-risk-factors-for-cardiovascular-diseas/data?select=heart_data.csv")
dt<- import("data/heart_data.csv")
View(dt)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(rio,tidyverse, gtsummary)
heart_dt<- import("data/heart_data.csv")
head(heart_dt)
View(heart_dt)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(rio,tidyverse, gtsummary,labelled )
var_label(heart_dt) <- list(
age = "Age",
gender = "Gender",
height = "Height(cm)",
weight = "Weight(kg)",
ap_hi = "Systolic blood pressure",
ap_lo = "Diastolic blood pressure",
cholesterol = "Cholesterol level",
gluc = "Glucose level",
smoke = "Smoking",
alco = "Alcohol consumption",
active = "Physical activity level",
cardio = "Cardiovascular disease."
)
heart_dt %>%
tbl_summary(by = cardio )
heart_dt %>%
tbl_summary(by = cardio, include = c(-index,-id) )
heart_dt %>%
tbl_summary(by = cardio, include = c(-index,-id),
digits = list(all_continuous() ~ c(2, 2),
all_categorical() ~ c(0, 1))
)
heart_dt %>%
tbl_summary(by = cardio, include = c(-index,-id),
digits = list(all_continuous() ~ c(1, 1),
all_categorical() ~ c(0, 1))
)
heart_dt %>%
tbl_summary(by = cardio, include = c(-index,-id),
digits = list(all_continuous() ~ c(0, 1),
all_categorical() ~ c(0, 1))
)
heart_dt %>%
tbl_summary(by = cardio, include = c(-index,-id),
digits = list(all_continuous() ~ c(0, 0),
all_categorical() ~ c(0, 1))
)
heart_dt %>%
tbl_summary(by = cardio,
include = c(-index,-id),
digits = list(all_continuous() ~ c(0, 0),
all_categorical() ~ c(0, 1))
) %>% add_overall()
heart_dt %>%
tbl_summary(by = cardio,
include = c(-index,-id),
digits = list(all_continuous() ~ c(0, 0),
all_categorical() ~ c(0, 1)),
statistic = list(all_continuous() ~ "{mean} ± {sd}")
) %>% add_overall()
heart_dt %>%
tbl_summary(by = cardio,
include = c(-index,-id),
digits = list(all_continuous() ~ c(1, 1),
all_categorical() ~ c(0, 1)),
statistic = list(all_continuous() ~ "{mean} ± {sd}")
) %>% add_overall()
heart_dt %>%
tbl_summary(by = cardio,
include = c(-index,-id),
digits = list(all_continuous() ~ c(1, 1),
all_categorical() ~ c(0, 1)),
statistic = list(all_continuous() ~ "{mean} ± {sd}")
) %>%
add_overall() %>%
add_p(pvalue_fun =purrr::partial(style_pvalue, digits =3))
heart_dt<- heart_dt %>%
mutate(gender = factor(gender, levels = c(1, 2), labels = c("Male", "Female")))
heart_dt %>%
tbl_summary(by = cardio,
include = c(-index,-id),
digits = list(all_continuous() ~ c(1, 1),
all_categorical() ~ c(0, 1)),
statistic = list(all_continuous() ~ "{mean} ± {sd}")
) %>%
add_overall() %>%
add_p(pvalue_fun =purrr::partial(style_pvalue, digits =3))
var_label(heart_dt) <- list(
age = "Age",
gender = "Gender",
height = "Height(cm)",
weight = "Weight(kg)",
ap_hi = "Systolic blood pressure",
ap_lo = "Diastolic blood pressure",
cholesterol = "Cholesterol level",
gluc = "Glucose level",
smoke = "Smoking",
alco = "Alcohol consumption",
active = "Physical activity",
cardio = "Cardiovascular disease."
)
heart_dt<- heart_dt %>%
mutate(gender = factor(gender, levels = c(1, 2), labels = c("Male", "Female")),
cardio = factor(gender, levels = c(0, 1), labels = c("No", "Yes")),
cholesterol = factor(cholesterol, levels = c(1, 2, 3), labels = c("low", "median","high")),
gluc = factor(gluc, levels = c(1, 2, 3), labels = c("low", "median","high"))
)
heart_dt %>%
tbl_summary(by = cardio,
include = c(-index,-id),
digits = list(all_continuous() ~ c(1, 1),
all_categorical() ~ c(0, 1)),
statistic = list(all_continuous() ~ "{mean} ± {sd}")
) %>%
add_overall() %>%
add_p(pvalue_fun =purrr::partial(style_pvalue, digits =3))
heart_dt<- import("data/heart_data.csv")
head(heart_dt)
var_label(heart_dt) <- list(
age = "Age",
gender = "Gender",
height = "Height(cm)",
weight = "Weight(kg)",
ap_hi = "Systolic blood pressure",
ap_lo = "Diastolic blood pressure",
cholesterol = "Cholesterol level",
gluc = "Glucose level",
smoke = "Smoking",
alco = "Alcohol consumption",
active = "Physical activity",
cardio = "Cardiovascular disease."
)
heart_dt<- heart_dt %>%
mutate(gender = factor(gender, levels = c(1, 2), labels = c("Male", "Female")),
cardio = factor(cardio, levels = c(0, 1), labels = c("No", "Yes")),
cholesterol = factor(cholesterol, levels = c(1, 2, 3), labels = c("low", "median","high")),
gluc = factor(gluc, levels = c(1, 2, 3), labels = c("low", "median","high"))
)
heart_dt %>%
tbl_summary(by = cardio,
include = c(-index,-id),
digits = list(all_continuous() ~ c(1, 1),
all_categorical() ~ c(0, 1)),
statistic = list(all_continuous() ~ "{mean} ± {sd}")
) %>%
add_overall() %>%
add_p(pvalue_fun =purrr::partial(style_pvalue, digits =3))
heart_dt<- heart_dt %>%
mutate(gender = factor(gender, levels = c(1, 2), labels = c("Male", "Female")),
cardio = factor(cardio, levels = c(0, 1), labels = c("No", "Yes")),
cholesterol = factor(cholesterol, levels = c(1, 2, 3), labels = c("low", "median","high")),
gluc = factor(gluc, levels = c(1, 2, 3), labels = c("low", "median","high"))
)
var_label(heart_dt) <- list(
age = "Age",
gender = "Gender",
height = "Height(cm)",
weight = "Weight(kg)",
ap_hi = "Systolic blood pressure",
ap_lo = "Diastolic blood pressure",
cholesterol = "Cholesterol level",
gluc = "Glucose level",
smoke = "Smoking",
alco = "Alcohol consumption",
active = "Physical activity",
cardio = "Cardiovascular disease."
)
heart_dt %>%
tbl_summary(by = cardio,
include = c(-index,-id),
digits = list(all_continuous() ~ c(1, 1),
all_categorical() ~ c(0, 1)),
statistic = list(all_continuous() ~ "{mean} ± {sd}")
) %>%
add_overall() %>%
add_p(pvalue_fun =purrr::partial(style_pvalue, digits =3))
heart_dt<- import("data/heart_data.csv")
head(heart_dt)
heart_dt<- heart_dt %>%
mutate(gender = factor(gender, levels = c(1, 2), labels = c("Male", "Female")),
cardio = factor(cardio, levels = c(0, 1), labels = c("No", "Yes")),
cholesterol = factor(cholesterol, levels = c(1, 2, 3), labels = c("low", "median","high")),
gluc = factor(gluc, levels = c(1, 2, 3), labels = c("low", "median","high"))
)
var_label(heart_dt) <- list(
age = "Age",
gender = "Gender",
height = "Height(cm)",
weight = "Weight(kg)",
ap_hi = "Systolic blood pressure",
ap_lo = "Diastolic blood pressure",
cholesterol = "Cholesterol level",
gluc = "Glucose level",
smoke = "Smoking",
alco = "Alcohol consumption",
active = "Physical activity",
cardio = "Cardiovascular disease."
)
heart_dt %>%
tbl_summary(by = cardio,
include = c(-index,-id),
digits = list(all_continuous() ~ c(1, 1),
all_categorical() ~ c(0, 1)),
statistic = list(all_continuous() ~ "{mean} ± {sd}")
) %>%
add_overall() %>%
add_p(pvalue_fun =purrr::partial(style_pvalue, digits =3))
heart_dt<- import("data/heart_data.csv")
head(heart_dt)
View(heart_dt)
heart_dt0 <- import("data/heart_data.csv")
head(heart_dt0)
heart_dt<- heart_dt0 %>%
mutate(gender = factor(gender, levels = c(1, 2), labels = c("Male", "Female")),
cardio = factor(cardio, levels = c(0, 1), labels = c("No", "Yes")),
cholesterol = factor(cholesterol, levels = c(1, 2, 3), labels = c("low", "median","high")),
gluc = factor(gluc, levels = c(1, 2, 3), labels = c("low", "median","high"))
)
var_label(heart_dt) <- list(
age = "Age",
gender = "Gender",
height = "Height(cm)",
weight = "Weight(kg)",
ap_hi = "Systolic blood pressure",
ap_lo = "Diastolic blood pressure",
cholesterol = "Cholesterol level",
gluc = "Glucose level",
smoke = "Smoking",
alco = "Alcohol consumption",
active = "Physical activity",
cardio = "Cardiovascular disease"
)
heart_dt %>%
tbl_summary(by = cardio,
include = c(-index,-id),
digits = list(all_continuous() ~ c(1, 1),
all_categorical() ~ c(0, 1)),
statistic = list(all_continuous() ~ "{mean} ± {sd}")
) %>%
add_overall() %>%
add_p(pvalue_fun =purrr::partial(style_pvalue, digits =3))
heart_dt %>%
tbl_summary(by = cardio,
include = c(-index,-id),
digits = list(all_continuous() ~ c(1, 1),
all_categorical() ~ c(0, 1)),
statistic = list(all_continuous() ~ "{mean} ± {sd}")
) %>%
modify_spanning_header(c("stat_1", "stat_2") ~ "**Cardiovascular Disease**") %>%
add_overall() %>%
add_p(pvalue_fun =purrr::partial(style_pvalue, digits =3))%>%
modify_caption("**Table 1: Summary Statistics for Cardiovascular Disease**")
pacman::p_load(rio,tidyverse, gtsummary,sjPlot,labelled )
heart_dt %>%
tbl_summary(by = cardio,
include = c(-index,-id),
digits = list(all_continuous() ~ c(1, 1),
all_categorical() ~ c(0, 1)),
statistic = list(all_continuous() ~ "{mean} ± {sd}")
) %>%
modify_spanning_header(c("stat_1", "stat_2") ~ "**Cardiovascular Disease**") %>%
add_overall() %>%
add_p(pvalue_fun =purrr::partial(style_pvalue, digits =3))%>%
modify_caption("**Table 1: Summary Statistics for Cardiovascular Disease**")
model <- glm(formula = cardio ~ . , data = heart_dt[,-c('index','id')], family = binomial())
heart_dt[,-c('index','id')]
heart_dt[,c('index','id')]
heart_dt[,!c('index','id')]
heart_dt<- heart_dt0 %>%
mutate(gender = factor(gender, levels = c(1, 2), labels = c("Male", "Female")),
cardio = factor(cardio, levels = c(0, 1), labels = c("No", "Yes")),
cholesterol = factor(cholesterol, levels = c(1, 2, 3), labels = c("low", "median","high")),
gluc = factor(gluc, levels = c(1, 2, 3), labels = c("low", "median","high"))
) %>%
select(-index,-id)
var_label(heart_dt) <- list(
age = "Age",
gender = "Gender",
height = "Height(cm)",
weight = "Weight(kg)",
ap_hi = "Systolic blood pressure",
ap_lo = "Diastolic blood pressure",
cholesterol = "Cholesterol level",
gluc = "Glucose level",
smoke = "Smoking",
alco = "Alcohol consumption",
active = "Physical activity",
cardio = "Cardiovascular disease"
)
heart_dt %>%
tbl_summary(by = cardio,
digits = list(all_continuous() ~ c(1, 1),
all_categorical() ~ c(0, 1)),
statistic = list(all_continuous() ~ "{mean} ± {sd}")
) %>%
modify_spanning_header(c("stat_1", "stat_2") ~ "**Cardiovascular Disease**") %>%
add_overall() %>%
add_p(pvalue_fun =purrr::partial(style_pvalue, digits =3))%>%
modify_caption("**Table 1: Summary Statistics for Cardiovascular Disease**")
model <- glm(formula = cardio ~ . , data = heart_dt, family = binomial())
knitr::opts_chunk$set(echo = TRUE, warning = F,message = F)
pacman::p_load(rio,tidyverse, gtsummary,sjPlot,labelled )
model <- glm(formula = cardio ~ . , data = heart_dt, family = binomial())
model <- glm(formula = cardio ~ . , data = heart_dt, family = binomial())
tab_model(model)
model <- glm(formula = cardio ~ . , data = heart_dt, family = binomial())
tab_model(model,title = "Table 2: Logistic Regression Model for Cardiovascular Disease Prediction")
knitr::opts_chunk$set(echo = TRUE, warning = F,message = F)
pacman::p_load(rio,tidyverse,ggplot2, gtsummary,sjPlot,labelled)
cholesterol_plot <- heart_dt %>%
group_by(Cholesterol) %>%
summarise(CVD_Incidence = mean(CVD))
cholesterol_plot <- heart_dt %>%
group_by(cholesterol) %>%
summarise(CVD_Incidence = mean(cardio))
cholesterol_plot
cholesterol_plot <- heart_dt %>%
group_by(cholesterol) %>%
summarise(CVD_Incidence = mean(cardio,na.rm=T))
cholesterol_plot
heart_dt %>%
group_by(cholesterol)
cholesterol_plot <- heart_dt %>%
group_by(cholesterol) %>%
summarise(CVD_Incidence = count(cardio))
cholesterol_plot <- heart_dt %>%
group_by(cholesterol) %>%
summarise(CVD_Incidence = mean(cardio == "Yes"))
cholesterol_plot
cholesterol_plot <- heart_dt %>%
group_by(cholesterol) %>%
summarise(CVD_Incidence = mean(cardio == "Yes"))
ggplot(cholesterol_plot, aes(x = cholesterol, y = CVD_Incidence)) +
geom_bar(stat = 'identity', fill = 'steelblue') +
labs(title = 'Proportion of CVD by Cholesterol Level', x = 'Cholesterol Level', y = 'Proportion of CVD') +
theme_minimal()
freshr::freshr()
library(flexPaths)
?flexPotential()
?flexEffect
?pathsEffect
?pathsEffect()
?pathsInfo
?pathsEffect()
data("singTreat")
singTreat<- singTreat %>% mutate( outcome3 = rpois(1000, lambda = A*X1))
library(tidyverse)
singTreat<- singTreat %>%
mutate( outcome3 = rpois(1000, lambda = 0.5A*X1+med1+med2_1))
singTreat<- singTreat %>%
mutate( outcome3 = rpois(1000, lambda = 0.5*A*X1+med1+med2_1))
singTreat<- singTreat %>%
mutate( outcome3 = rpois(1000, lambda = 0.5*treat*X1+med1+med2_1))
singTreat<- singTreat %>%
mutate( outcome3 = rpois(1, lambda = 0.5*treat*X1+med1+med2_1))
singTreat
singTreat<- singTreat %>%
mutate( lambda = 0.5*treat*X1+med1+med2_1,
outcome3 = rpois(1, lambda))
singTreat$lambda
?rpois
mean(singTreat$lambda)
singTreat<- singTreat %>%
mutate( lambda = exp(0.5*treat*X1+med1+med2_1),
outcome3 = rpois(1, lambda))
singTreat$lambda
singTreat<- singTreat %>%
mutate( lambda = exp(0.5*treat*X1+med1+med2_1),
outcome3 = rpois(1, lambda))
singTreat
singTreat$outcome3
singTreat<- singTreat %>%
mutate( lambda = exp(-0.5*treat*X1+med1+med2_1),
outcome3 = rpois(1, lambda))
singTreat$outcome3
singTreat<- singTreat %>%
mutate( lambda = exp(-0.1*treat*X1+med1+med2_1),
outcome3 = rpois(1, lambda))
singTreat$outcome3
singTreat<- singTreat %>%
mutate( lambda = exp(-0.1*treat*X1+med1+med2_1),
outcome3 = rpois(n(), lambda))
singTreat$outcome3
singTreat<- singTreat %>%
mutate( lambda = exp(-0.3*treat*X1+med1+med2_1),
outcome3 = rpois(n(), lambda))
singTreat$outcome3
EIF_fit <- pathsInfo(data = singTreat, A = "treat", Y = "outcome3", cov_x = c("X1", "X2"),
M.list = list(M1 = "med1", M2 = c('med2_1', 'med2_2')),
estimation = "EIF",
model.outcome = ~ glm(family = poisson()),
model.propensity = list(cov_x = ~ bart(verbose = FALSE, ndpost = 200),
M1 = ~ glm(family = binomial()),
M2 = ~ SuperLearner(SL.library = c('SL.gam','SL.glm'),family = binomial()))
)
singTreat<- singTreat %>%
mutate( lambda = exp(-0.3*treat*X1+med1+med2_1),
outcome3 = rpois(n(), lambda))
EIF_fit <- pathsInfo(data = singTreat, A = "treat", Y = "outcome3", cov_x = c("X1", "X2"),
M.list = list(M1 = "med1", M2 = c('med2_1', 'med2_2')),
estimation = "EIF",
model.outcome = ~ glm(family = poisson()),
model.propensity = list(cov_x = ~ bart(verbose = FALSE, ndpost = 200),
M1 = ~ glm(family = binomial()),
M2 = ~ SuperLearner(SL.library = c('SL.gam','SL.glm'),family = binomial()))
)
results_refer0 <- pathsEffect(pathsInfo = EIF_fit, decomposition = "refer0", scale = "diff",
CI_level = 0.95, nboot = NULL, m.cores = NULL)
results_refer0
poissonfit<-glm(outcome3~treat+X1+med1+med2_1,family = poisson(),singTreat)
poissonfit
predict(poissonfit)
hist(predict(poissonfit))
hist(predict(singTreat$outcome3))
hist(singTreat$outcome3)
hist(predict(poissonfit))
predict(poissonfit,singTreat[1:10,] ,type = "response")
predict(poissonfit,singTreat[1:10,] )
hist(predict(poissonfit,singTreat[1:10,] ,type = "response"))
tab_model(glmer_health,glmer_health_nAGQ50,
show.ci =F,
show.se = T,
show.stat = T,
transform = NULL,
dv.labels = c("Laplace Approximation", "nAGQ=50"))
"renv" %in% row.names(installed.packages())
freshr::freshr()
setwd("/Users/oxx/learn/BIOS_master/BIOS_550_Data_science/project/final")
getwd()
renv::init()
renv::status()
remove.packages("gtsummary")
remove.packages(pacman)
remove.packages("pacman")
renv::status()
renv::restore()
renv::restore()
pacman::p_load
renv::restore()
source("renv/activate.R")
renv::restore()
remove.packages("pacman")
remove.packages("pacman")
remove.packages("pacman")
getwd()
source("renv/activate.R")
renv::status()
